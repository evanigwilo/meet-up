name: Build, Test & Deploy
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build-test-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      # Run test in a CI environment and stop running tests after 1 failed test
      TEST_ARGS: --ci --watchAll=false --bail --forceExit
      #  External docker build cache sources and destinations
      CACHE_FROM: type=local,src=/tmp/.buildx-cache
      CACHE_TO: type=local,dest=/tmp/.buildx-cache-new,mode=max

    steps:
      # Checks out repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Live Server Host
        run: |
          echo "Live server host: ${{ vars.LIVE_SERVER_HOST }}"

      - name: Copy & Create Environment Variables
        run: |
          cp ./frontend/.env.example ./frontend/.env
          cp ./backend/.env.example ./backend/.env

      - name: Run Frontend Tests
        id: frontend-test
        shell: bash
        run: |
          docker-compose \
          --env-file ./frontend/.env -p meet-up-test-stack \
          -f ./frontend/docker-compose.dev.yml \
          -f ./frontend/docker-compose.test.yml \
          up --build \
          --abort-on-container-exit web-app

      - name: Run Backend Tests
        id: backend-test
        env:
          # OAuth configurations
          OAUTH_GOOGLE_CLIENTID: OAUTH_GOOGLE_CLIENTID
          OAUTH_GOOGLE_CLIENTSECRET: OAUTH_GOOGLE_CLIENTSECRET
          FACEBOOK_CLIENT_ID: FACEBOOK_CLIENT_ID
          FACEBOOK_CLIENT_SECRET: FACEBOOK_CLIENT_SECRET
        shell: bash
        run: |
          docker-compose \
          --env-file ./backend/.env \
          -p meet-up-test-stack \
          -f ./backend/docker-compose.yml \
          -f ./backend/docker-compose.dev.yml \
          -f ./backend/docker-compose.test.yml \
          up --build \
          --abort-on-container-exit api-server

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push api-server
        uses: docker/build-push-action@v4
        with:
          context: backend
          file: backend/Dockerfile
          build-args: |
            NODE_ENV=production
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/meet-up:api-server
          cache-from: ${{ env.CACHE_FROM }}
          cache-to: ${{ env.CACHE_TO }}

      - name: Build & Push web-app
        uses: docker/build-push-action@v4
        with:
          context: frontend
          file: frontend/Dockerfile.prod
          # Production build api server arguments
          build-args: |
            REACT_APP_SERVER_API_VERSION=/v1
            REACT_APP_SERVER_PATH=/api
            REACT_APP_SERVER_PORT=443
            REACT_APP_SERVER_PROTOCOL=https
            REACT_APP_SERVER_HOST=${{ vars.LIVE_SERVER_HOST }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/meet-up:web-app
          cache-from: ${{ env.CACHE_FROM }}
          cache-to: ${{ env.CACHE_TO }}

        # Temp fix to prevent GitHub's limit of 5GB.
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move & Clear Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
